name : $(Build.BuildId)

trigger:
  batch: true
  branches:
    include:
    - refs/heads/develop2

resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/develop2

stages:
- stage: CI
  jobs:
  - job: BuildPipeline
    variables:
      MAVEN_CACHE_FOLDER: $(HOME)/.m2/repository
      MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
    displayName: Build Cora_AI_Excel_Extractor
    timeoutInMinutes: 20
    pool:
      name: Azure Pipelines
      vmImage: ubuntu-20.04
    steps:
  
    - checkout: self

    - task: Cache@2
      displayName: Cache Maven LocalRepo
      inputs:
        key: '"funcs" | maven |"$(Agent.OS)" | **/pom.xml'
        path: '$(MAVEN_CACHE_FOLDER)'
    
    - task: Bash@3
      displayName: Bash Script
      enabled: False
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          echo 'Bash JDK Installation '
            
          sudo add-apt-repository ppa:openjdk-r/ppa
          sudo apt update
          sudo apt install openjdk-11-jdk
          
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          echo $JAVA_HOME
          export PATH=$PATH:$JAVA_HOME/bin
          echo $PATH
      
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        options: '-DskipTests'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: CopyFiles@2
      displayName: 'Copy Binary Files to Staging'
      enabled: true
      inputs:
        SourceFolder: '$(system.defaultworkingdirectory)'
        Contents: |
          **
          !**/.git/**
          !**/.gitignore
          !**/azure-pipelines.yml
          !**/pom.xml
          !**/*.md
          !**/maven-archiver/**
          !**/maven-status/**
          !**/target/classes/**
          !**/target/test-classes/**
          !**/src/**
        TargetFolder: '$(build.artifactstagingdirectory)'
        CleanTargetFolder: true
  
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      enabled: true
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        StoreAsTar: false
...